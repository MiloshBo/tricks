# How to merge two dictionaries
x = {'a': 1, 'b': 2}
y = {'b': 3, 'c': 4}
z = {**x, **y}
print(z)

# Different ways to test multiple
# flags at once in Python
x, y, z = 0, 1, 0
if x == 1 or y == 1 or z == 1:
	print('passed')
if 1 in (x, y, z):
	print('passed')
if x or y or z:
	print('passed')
if any((x, y, z)):
	print('passed')
	
# How to sort a Python dict by value
# (== get a representation sorted by value)
xs = {'a': 4, 'b': 3, 'c': 2, 'd': 1}
print(sorted(xs.items(), key=lambda x: x[1]))
import operator
print(sorted(xs.items(), key=operator.itemgetter(1)))

# The get() method on dicts
# and its "default" argument
name_for_userid = {
    382: "Alice",
    590: "Bob",
    951: "Dilbert",
}
def greetings(userid):
	return f'Hi {name_for_userid.get(userid, "there"}!'
greetings(382)


# Why Python is Great: Namedtuples
# Using namedtuple is way shorter than
# defining a class manually:
from collections import namedtuple
Car = namedtuple('Car', 'color mileage')
# Our new "Car" class works as expected:
my_car = Car('red', 3812.4)
my_car.color
'red'
my_car.mileage
3812.4
# We get a nice string repr for free:
my_car
Car(color='red' , mileage=3812.4)
# Like tuples, namedtuples are immutable:
my_car.color = 'blue'
AttributeError: "can't set attribute"


Larz60+ = '''
an important thing to know is that you can get the xpath of any element from the firefox or chrome browser:

    Highlight the data you want to find
    Right click and select INspect Element
    right click on html in inspector
    Choose copy
    select XPath
'''


# path 
url = 'http://pythonscraping.com/files/inaugurationSpeech.txt'
file_name = os.path.basename(url)
response = requests.get(url)
with open(file_name, 'wb') as f:
	f.write(response.content)
	
with open(os.path.abspath("c:/Python36/kodovi/inauguration.txt"), "r") as file:
	text = file.read()
print(text[0:1000])

s = 'Crème and Spicy jalapeño ☂ ⛄日本語のキ'
with open('unicode.txt', 'w', encoding='utf-8') as f_out:
	f_out.write(s)
with open('unicode.txt', encoding='utf-8') as f:
	data = f.read()
	print(data)
